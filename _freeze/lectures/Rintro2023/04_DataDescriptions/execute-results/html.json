{
  "hash": "cb79db91d521ea2e9f9f16d1329b0162",
  "result": {
    "markdown": "---\ntitle: \"04: Data Descriptions and Visualizations\"\nauthor: \"Thomas Manke\"\ndate:  \"2023-03-26\"\ncategories:\n  - Descriptive Staistics\n  - Factors\n  - Correlations\noutput:\n  html_document:\n    df_print: paged\n    code_folding: show\n    toc: yes\n    toc_depth: 2\n---\n\n\n\n\n\n# R Markdown\n\nR scripts (.R) help to define and run reproducible analysis workflows, but they lack documentation (other than comments).\n\nR Markdown files (\\*.Rmd) combine scripts with powerful text formatting. They can be rendered (=\"knit\") to produce html and pdf.\n\n**Task**: In Rstudio,\n\n-   open a new R markdown document with `File > New File > R Markdown...`. (This will open a template for an Rmd file that can be knit)\n-   To convert this file into html press `Knit` - try it out! You may have to save it first as - e.g. \"first.Rmd\"\n-   There is a `YAML` header that contains parameters which will affect the rendering process - customize them\n-   The rest of the document are `text blocks` (with simple format instructions) and `code blocks` (with R code)\n-   In R studio, the code blocks can also be run individually using the embedded `Play` button - try it out\n-   Play time: Modify the yaml header, text blocks or code - or all of it. \"knit\" the documnt and observe changes.\n\n------------------------------------------------------------------------\n\n# Descriptive Statistics\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/descriptive_614a2ab35d9a96cdb0ec336ec7d164ba'}\n\n```{.r .cell-code}\nsummary(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n:::\n\n```{.r .cell-code}\nplot(iris$Petal.Length) # a plot at last. Simple, but many arguments: ?plot \n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/descriptive-1.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(iris$Petal.Length) # and a histogram\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/descriptive-2.png){width=672}\n:::\n:::\n\n\n**Task** hist() can have many arguments. Use help to find out how the histogram can be customized (e.g. number of break points, title, colors). Try some of it.\n\n# Boxplot: a more condensed summary\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/unnamed-chunk-3_a9a44bbb08bb669022618c7d525a4c2f'}\n\n```{.r .cell-code}\nboxplot(iris$Petal.Length)\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n**Task**: The boxplot above is for *all* data. Create a boxplot of petal length for species \"setosa\" only.\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/boxplot_8c2353025af28e602e4b51dea38f78d8'}\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/boxplot-1.png){width=672}\n:::\n:::\n\n\nBoxplot understands data frames\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/unnamed-chunk-5_1f0f783e2514095d82afb60e38fb84ae'}\n\n```{.r .cell-code}\nboxplot(iris) \n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**Query**: What does the boxplot for Species mean?\n\n# Interlude: Factors = categorical variables\n\nFactors denote a special class of R-objects that can be thought of as categories (here: species). They have a given number of *levels* which are internally represented as integers.\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/factors_da061f027e31b3978304800ae5eb4513'}\n\n```{.r .cell-code}\nclass(iris$Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"factor\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(iris$Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"integer\"\n```\n:::\n\n```{.r .cell-code}\nts=table(iris$Species)  # returns a contigency table ~> histogram for categorical data\nbarplot(ts, col=rainbow(3), ylab=\"observations\", cex.names=0.9)\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/factors-1.png){width=672}\n:::\n\n```{.r .cell-code}\npie(ts,col=rainbow(3))  # if you really must\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/factors-2.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nBoxplot understands factors in data frames\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/boxplot_factors_bc406714df3d18cc292efa8c30d5a596'}\n\n```{.r .cell-code}\nboxplot( Petal.Length ~ Species, data = iris, las=2) # what does las=2 do ?\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/boxplot_factors-1.png){width=672}\n:::\n:::\n\n\n**Task**: Use help to add three different colors:\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/colored_boxplot_1258bcad9b180b9fd2f9b2b3399e16b1'}\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/colored_boxplot-1.png){width=672}\n:::\n:::\n\n\n# Correlations\n\nIf a data set has many numerical variables we often want to understand their correlations structure\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/corr_72c99e95bc747ed1b0f999c7487ce671'}\n\n```{.r .cell-code}\nx=iris$Petal.Length\ny=iris$Petal.Width\nplot(x,y)                              # again: this can be customized\nabline(v=mean(x),h=mean(y),col=\"red\")  # add vertical/horizontal lines\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/corr-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncor(x,y)                               # a correlation coefficient: which one?\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9628654\n```\n:::\n:::\n\n\n# All-Against-All Correlations\n\n**Task**: remove the Species variable from \"iris\" and store the result in a new data.frame \"niris\"\n\n\n::: {.cell hash='04_DataDescriptions_cache/html/niris_52b3e8f42d498ccee3bb81656dc8ca8e'}\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t150 obs. of  4 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n```\n:::\n:::\n\n::: {.cell hash='04_DataDescriptions_cache/html/all_against_all_311fae72350f14dbfb4823d33aad2a1f'}\n\n```{.r .cell-code}\ncor(niris)  # correlation matrix. Which correlation coefficient?\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Sepal.Length Sepal.Width Petal.Length Petal.Width\nSepal.Length    1.0000000  -0.1175698    0.8717538   0.8179411\nSepal.Width    -0.1175698   1.0000000   -0.4284401  -0.3661259\nPetal.Length    0.8717538  -0.4284401    1.0000000   0.9628654\nPetal.Width     0.8179411  -0.3661259    0.9628654   1.0000000\n```\n:::\n\n```{.r .cell-code}\nplot(niris) # provide a visualization for data frames, try also pairs(iris)\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/all_against_all-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# assign species-colors to each observation \ncols = iris$Species                        # understand how color is defined\nplot(niris, col=cols, lower.panel=NULL)   # \"cols\" was defined in task above\n```\n\n::: {.cell-output-display}\n![](04_DataDescriptions_files/figure-html/all_against_all-2.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n# Review\n\n-   R markdown files extend scripts and can be converted to html/pdf\n-   summary for descriptive statistics\n-   simple plots with simple commands: plot(), hist(), ...\n-   lots of parameters for customization: line width, colours, ...\n-   correlation between variables: cor(), plot() - class specific behaviour\n-   Notice that the data used was extremely clean and structured: data()\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}