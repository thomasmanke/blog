{
  "hash": "0d241823da51fe9e02741772519560a2",
  "result": {
    "markdown": "---\ntitle: \"Variance Stabilization\"\ndate: 2023/06/01\ndate-modified: last-modified\ncategories: \n  - variance stabilization\n  - transformations\n  \nimage: vst.png\n---\n\n\n## Error Propagation {.smaller}\n\n\n::: {.cell hash='vst_cache/html/setup_07b72892161b89bbe521ed54ac72b98a'}\n\n:::\n\n\nLet $X$ be a random variable: $X \\propto p(\\theta)$\n\nLet $f(X)$ be a transformation $X \\to Y = f(X)$\n\nThen we have the following relations between the various expectations. $$\n\\begin{array}{lll}\nE[X]   &=\\mu      & \\to E[Y] = f(\\mu) \\\\\nVar[X] &=\\sigma^2 & \\to Var[Y] = |f'(X=\\mu)|^2 \\times \\sigma^2\n\\end{array}\n$$\n\nLet's illustrate this with $X \\propto Pois(\\lambda)$ and two different transformations:\n\n$f(X)=X^2$ (left plot) and $f(X)= 2\\sqrt{X}$ (right plot). In both cases $X$ was sampled from three different distributions: $\\lambda=(10,50,100)$.\n\n\n::: {.cell layout-nrow=\"5\" hash='vst_cache/html/error_prop_f9da0b0408872d52534da648c6452262'}\n\n```{.r .cell-code  code-summary=\"Code for X ~ Poisson(mu)\"}\nset.seed(42)\nN=100\nmu=c(10, 50, 100)                    # means for Poisson\nx <- rpois(N*length(mu), lambda=mu)  # generate x ~ Pois\ng <- rep(mu,N)                       # group label\n\n# data frame with two different transformation\ndf = data.frame(x, y1=x^2, y2=2*sqrt(x), g)\n\nleg <- labs(color=expression(mu)) \nth  <- theme(legend.position=\"bottom\", \n             legend.text=element_text(size=rel(2)),\n             legend.title = element_text(size=rel(2)),\n             axis.title = element_text(size=rel(2)) )\nyl1 <- ylab(expression(\"Y=\"~X^2))\nyl2 <- ylab(expression(\"Y=\"~2 * sqrt(X)))\n\np1 <- df %>%  ggplot(aes(x,y1,color=as.factor(g))) + geom_point() + leg + yl1 + th\np2 <- df %>%  ggplot(aes(x,y2,color=as.factor(g))) + geom_point() + leg + yl2 + th\n\np1m <- ggMarginal(p1, type=\"histogram\", groupFill=TRUE)\np2m <- ggMarginal(p2, type=\"histogram\", groupFill=TRUE)\n\npatchwork::wrap_elements(p1m) + patchwork::wrap_elements(p2m) + plot_layout(ncol=2)\n```\n\n::: {.cell-output-display}\n![X is sampled from 3 different Poisson distributions having different means (and variances). Two different transformations, Y=f(X), illustrate how mean and variances change under transformation. In the example on the right the variance is stabilised by the transformation.](vst_files/figure-html/error_prop-1.png){width=1536}\n:::\n\n```{.r .cell-code  code-summary=\"Code for X ~ Poisson(mu)\"}\nggsave('vst.png')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 16 x 8 in image\n```\n:::\n:::\n\n::: {.cell .column-margin tbl-cap='Some transformations \"stabilize the variance\"' hash='vst_cache/html/error_prop_table_ec08313775f5e12357a79166d90994b7'}\n\n```{.r .cell-code}\ndf %>% \n  group_by(g) %>% \n  summarize(mean_x=mean(x), var_x=var(x), var_y1=var(y1), var_y2=var(y2)) %>%\n  knitr::kable(digits = 1)\n```\n\n::: {.cell-output-display}\n|   g| mean_x| var_x|    var_y1| var_y2|\n|---:|------:|-----:|---------:|------:|\n|  10|   10.3|  13.0|    7080.3|    1.2|\n|  50|   50.2|  64.5|  657231.9|    1.3|\n| 100|   99.8|  98.2| 4004616.3|    1.0|\n:::\n:::\n\n\nNotice that $f(X) = 2 \\sqrt{X}$ \"stabilizes\" the variance of the transformed variable $Y$.\n\nThis finding can be generalized.\n\n## Variance Stabilization {.smaller}\n\nAssume our observed data is \"heteroskedastic\", i.e. $VAR[X]$ is some function of $E[X] \\equiv \\mu$\n\nOne specific example could be a Negative Binomial: $X \\propto NB(\\mu, \\alpha=1/\\theta)$ where\n\n$$\nVar[X] = g(E[X]) = \\mu + \\alpha \\cdot \\mu^2\n$$\n\nThis heteroskedastisity can be removed by choosing a transformation $f$ such that $|f'(x=\\mu)|^2$ is the inverse of $g$.\n\n::: incremental\n-   for $\\alpha = 0$: chose $|f'(x=\\mu)|^2 = \\mu^{-1} \\to f(x)=2\\sqrt{x}$\n-   for $\\alpha > 0$: chose $|f'(x=\\mu)|^2 = (\\mu + \\alpha\\mu^2)^{-1} \\to$ $$\n    f(x) = \\frac{1}{\\sqrt{\\alpha}} acosh(2\\alpha x + 1) \\\\\n    $$ ...exact solution if $\\alpha$ is known\n:::\n\n## Simpler Transformations\n\nOnly the derivative $f'(x=\\mu)$ is relevant for variance stabilization, so we can have equivalent transformation for variance stabilization.\n\n\n::: {.cell layout-nrow=\"5\" hash='vst_cache/html/simple_trafo_66314d13f8d883cd7dbc5fafec2344dc'}\n\n```{.r .cell-code}\nx=1:100                         # range of x\na=0.5                           # dispersion\n\ngc=acosh(2*a*x + 1)   # exact: upto division by sqrt(a)\ngl=log(4*a*x+1)       # good for large x\ng2= log(x + 1/(4*a))  # shifted by log(4a) with same derivative\n\ndata.frame(x, acosh=gc, log1=gl, log2=g2) %>%\n  ggplot() +\n  geom_point(aes(x,acosh,color=\"acosh\")) +\n  geom_point(aes(x,log1,color=\"log(4ax+1)\")) + \n  geom_point(aes(x,log2,color=\"log(x + 1/4a)\")) + \n  ylab(\"Y=f(x)\") +\n  theme(legend.text=element_text(size=rel(1.5)))\n```\n\n::: {.cell-output-display}\n![There are equivalent or approximate transformations. Notice that only the derivative is important for the purpose of variance stabilzation](vst_files/figure-html/simple_trafo-1.png){width=672}\n:::\n:::\n\n\n`Log-Normalization`\n\n$\\log(x + 1/4\\alpha)$ has same derivative as $acosh(2\\alpha x +1)$ âœ“\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}