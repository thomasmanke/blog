name: Quarto Publish

on:
  workflow_dispatch:
  push:
    branches: main
    paths:
      - '**.qmd'
      - '**.Rmd'
      - '**.yml'
      - 'envs/**'

env:
  # Set the base environment file path here - single source of truth
  BASE_ENV_FILE: 'envs/env.yml'
  # Use a different name for our primary environment to avoid conflicts
  PRIMARY_ENV_NAME: 'quarto-base'

defaults:
  run:
    shell: bash -l {0}
    
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      # Cache the entire Quarto extensions directory
      - name: Cache Quarto extensions
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/quarto
            /home/runner/.local/share/quarto
          key: quarto-ext-v1 
          ### later; key: quarto-ext-${{ hashFiles('.github/workflows/publish.yml') }}
          restore-keys: |
            quarto-ext-

      - name: Cache docs and freeze
        id: cache-docs
        uses: actions/cache@v3
        with:
          path: |
            ./docs
            ./_freeze
          key: quarto-${{ github.sha }}
          restore-keys: |
            quarto-

      - name: Verify base environment file
        run: |
          if [ ! -f "${{ env.BASE_ENV_FILE }}" ]; then
            echo "::error::Base environment file ${{ env.BASE_ENV_FILE }} does not exist!"
            exit 1
          fi
          echo "Using base environment file: ${{ env.BASE_ENV_FILE }}"

      - name: Set up base environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{ env.BASE_ENV_FILE }}
          environment-name: ${{ env.PRIMARY_ENV_NAME }}
          cache-environment: true

      - name: Activate base environment
        run: |
            micromamba --version
            micromamba activate ${{ env.PRIMARY_ENV_NAME }}

      - name: Install Quarto extensions conditionally
        run: |
          if ! quarto list extensions | grep -q "shinylive"; then
            echo "Installing shinylive extension..."
            quarto add --no-prompt quarto-ext/shinylive
          else
            echo "shinylive extension already installed"
          fi
          
          if ! quarto list extensions | grep -q "include-code-files"; then
            echo "Installing include-code-files extension..."
            quarto add --no-prompt quarto-ext/include-code-files
          else
            echo "include-code-files extension already installed"
          fi
          
          # Install R packages
          micromamba activate ${{ env.PRIMARY_ENV_NAME }}
          Rscript -e 'if(!requireNamespace("shinylive", quietly = TRUE)) pak::pak("posit-dev/r-shinylive")'
              
#      - name: Install shinylive extension and packages
#        run: |
#          ./install_packages.sh

      - name: List quarto extensions
        run: quarto list extensions

      - name: Register base kernel
        run: |
          python -m ipykernel install --user --name "${{ env.PRIMARY_ENV_NAME }}" --display-name "Python (Base)"
          
      - name: Setup specialized environments
        id: specialized-envs
        uses: ./.github/actions/setup-specialized-environments
        with:
          base-env-file: ${{ env.BASE_ENV_FILE }}
          primary-env-name: ${{ env.PRIMARY_ENV_NAME }}
          
      - name: Render Quarto project
        run: |
          micromamba activate ${{ env.PRIMARY_ENV_NAME }}
          quarto render
      
      - name: Check docs directory
        run: |
          if [ ! -d "docs" ]; then
            echo "::error::Docs directory doesn't exist after rendering!"
            echo "Checking Quarto project configuration..."
            if [ -f "_quarto.yml" ]; then
              grep -i "output-dir\|output_dir" _quarto.yml || echo "No output-dir setting found"
            fi
            mkdir -p docs
            echo "<html><body>Build error - see logs</body></html>" > docs/index.html
          else
            echo "Docs directory contents:"
            ls -la docs/
          fi

      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
